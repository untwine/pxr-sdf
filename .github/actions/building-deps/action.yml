name: building-deps
description: "Install Build Dependencies"

inputs:
  onetbb:
    description: "oneTBB version targeted"

  path:
    description: "Path to install dependencies into"

runs:
  using: composite
  steps:
    - name: Install conan
      shell: bash
      run: |
        python -m pip install --upgrade pip
        python -m pip install conan==2.*
        conan profile detect
        conan profile show

    - name: Install oneTBB
      shell: bash
      working-directory: ${{runner.temp}}
      run: |
        conan install \
        --requires onetbb/${{ inputs.onetbb }} \
        --output-folder="${{ inputs.path }}" \
        --options=*:shared=True \
        --generator=CMakeDeps \
        --build=missing \
        --deployer=runtime_deploy \
        --deployer-folder="${{ inputs.path }}/lib"

    - name: Build Pxr Arch
      shell: bash
      working-directory: ${{runner.temp}}
      run: |
        git clone https://github.com/untwine/pxr-arch.git
        cmake -S pxr-arch -B pxr-arch/build \
          -D "CMAKE_INSTALL_PREFIX=${{ inputs.path }}"
        cmake --build pxr-arch/build --config Release --target install

    - name: Build Pxr Boost Python
      shell: bash
      working-directory: ${{runner.temp}}
      run: |
        git clone https://github.com/untwine/pxr-boost.git
        cmake -S pxr-boost -B pxr-boost/build \
          -D "CMAKE_INSTALL_PREFIX=${{ inputs.path }}"
        cmake --build pxr-boost/build --config Release --target install

    - name: Build Pxr Tf
      shell: bash
      working-directory: ${{runner.temp}}
      run: |
        git clone https://github.com/untwine/pxr-tf.git
        cmake -S pxr-tf -B pxr-tf/build \
          -D "BUILD_PYTHON_BINDINGS=ON" \
          -D "CMAKE_INSTALL_PREFIX=${{ inputs.path }}"
        cmake --build pxr-tf/build --config Release --target install

    - name: Build Pxr Js
      shell: bash
      working-directory: ${{runner.temp}}
      run: |
        git clone https://github.com/untwine/pxr-js.git
        cmake -S pxr-js -B pxr-js/build \
          -D "CMAKE_INSTALL_PREFIX=${{ inputs.path }}"
        cmake --build pxr-js/build --config Release --target install

    - name: Build Pxr Gf
      shell: bash
      working-directory: ${{runner.temp}}
      run: |
        git clone https://github.com/untwine/pxr-gf.git
        cmake -S pxr-gf -B pxr-gf/build \
          -D "CMAKE_INSTALL_PREFIX=${{ inputs.path }}"
        cmake --build pxr-gf/build --config Release --target install

    - name: Build Pxr Trace
      shell: bash
      working-directory: ${{runner.temp}}
      run: |
        git clone https://github.com/untwine/pxr-trace.git
        cmake -S pxr-trace -B pxr-trace/build \
          -D "BUILD_PYTHON_BINDINGS=ON" \
          -D "CMAKE_INSTALL_PREFIX=${{ inputs.path }}"
        cmake --build pxr-trace/build --config Release --target install

    - name: Build Pxr Work
      shell: bash
      working-directory: ${{runner.temp}}
      run: |
        git clone https://github.com/untwine/pxr-work.git
        cmake -S pxr-work -B pxr-work/build \
          -D "BUILD_PYTHON_BINDINGS=ON" \
          -D "CMAKE_INSTALL_PREFIX=${{ inputs.path }}"
        cmake --build pxr-work/build --config Release --target install

    - name: Build Pxr Plug
      shell: bash
      working-directory: ${{runner.temp}}
      run: |
        git clone https://github.com/untwine/pxr-plug.git
        cmake -S pxr-plug -B pxr-plug/build \
          -D "BUILD_PYTHON_BINDINGS=ON" \
          -D "CMAKE_INSTALL_PREFIX=${{ inputs.path }}"
        cmake --build pxr-plug/build --config Release --target install

    - name: Build Pxr Vt
      shell: bash
      working-directory: ${{runner.temp}}
      run: |
        git clone https://github.com/untwine/pxr-vt.git
        cmake -S pxr-vt -B pxr-vt/build \
          -D "BUILD_PYTHON_BINDINGS=ON" \
          -D "CMAKE_INSTALL_PREFIX=${{ inputs.path }}"
        cmake --build pxr-vt/build --config Release --target install

    - name: Build Pxr Ar
      shell: bash
      working-directory: ${{runner.temp}}
      run: |
        git clone https://github.com/untwine/pxr-ar.git
        cmake -S pxr-ar -B pxr-ar/build \
          -D "BUILD_PYTHON_BINDINGS=ON" \
          -D "CMAKE_INSTALL_PREFIX=${{ inputs.path }}"
        cmake --build pxr-ar/build --config Release --target install

    - name: Build Pxr Ts
      shell: bash
      working-directory: ${{runner.temp}}
      run: |
        git clone https://github.com/untwine/pxr-ts.git
        cmake -S pxr-ts -B pxr-ts/build \
          -D "BUILD_PYTHON_BINDINGS=ON" \
          -D "CMAKE_INSTALL_PREFIX=${{ inputs.path }}"
        cmake --build pxr-ts/build --config Release --target install

    - name: Build Pxr Pegtl
      shell: bash
      working-directory: ${{runner.temp}}
      run: |
        git clone https://github.com/untwine/pxr-pegtl.git
        cmake -S pxr-pegtl -B pxr-pegtl/build \
          -D "BUILD_PYTHON_BINDINGS=ON" \
          -D "CMAKE_INSTALL_PREFIX=${{ inputs.path }}"
        cmake --build pxr-pegtl/build --config Release --target install
